services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - suporteflow-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - frontend:/app # Sincroniza as alterações em tempo real
      - /app/node_modules # Cria um volume anônimo para a pasta node_modules, evitando sobreposição com a pasta local
    networks:
      - suporteflow-network

  db:
    image: postgres:17-alpine # Ou mysql:8.0, se preferir MySQL~
    env_file:
      - .env
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - suporteflow-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  db-data:
  frontend:

networks:
  suporteflow-network:
    driver: bridge
